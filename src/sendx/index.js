/**
 * SendX REST API
 * # Introduction The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesn’t support bulk updates. You can work on only one object per request. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Campaign from './model/Campaign';
import CampaignDashboardData from './model/CampaignDashboardData';
import CampaignRequest from './model/CampaignRequest';
import Contact from './model/Contact';
import ContactRequest from './model/ContactRequest';
import CreateResponse from './model/CreateResponse';
import DashboardStats from './model/DashboardStats';
import DeleteCampaign200Response from './model/DeleteCampaign200Response';
import DeleteRequest from './model/DeleteRequest';
import DeleteResponse from './model/DeleteResponse';
import LastSentCampaignStat from './model/LastSentCampaignStat';
import ListModel from './model/ListModel';
import ListRequest from './model/ListRequest';
import ReportData from './model/ReportData';
import Response from './model/Response';
import Sender from './model/Sender';
import SenderRequest from './model/SenderRequest';
import SenderResponse from './model/SenderResponse';
import Tag from './model/Tag';
import TagRequest from './model/TagRequest';
import CampaignApi from './api/CampaignApi';
import ContactApi from './api/ContactApi';
import ListApi from './api/ListApi';
import ReportsApi from './api/ReportsApi';
import SenderApi from './api/SenderApi';
import TagsApi from './api/TagsApi';


/**
* # Introduction The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesn’t support bulk updates. You can work on only one object per request. &lt;br&gt; .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var sendx = require('sendx/index'); // See note below*.
* var xxxSvc = new sendx.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new sendx.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['sendx/index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new sendx.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new sendx.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module sendx/index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:sendx/ApiClient}
     */
    ApiClient,

    /**
     * The Campaign model constructor.
     * @property {module:sendx/model/Campaign}
     */
    Campaign,

    /**
     * The CampaignDashboardData model constructor.
     * @property {module:sendx/model/CampaignDashboardData}
     */
    CampaignDashboardData,

    /**
     * The CampaignRequest model constructor.
     * @property {module:sendx/model/CampaignRequest}
     */
    CampaignRequest,

    /**
     * The Contact model constructor.
     * @property {module:sendx/model/Contact}
     */
    Contact,

    /**
     * The ContactRequest model constructor.
     * @property {module:sendx/model/ContactRequest}
     */
    ContactRequest,

    /**
     * The CreateResponse model constructor.
     * @property {module:sendx/model/CreateResponse}
     */
    CreateResponse,

    /**
     * The DashboardStats model constructor.
     * @property {module:sendx/model/DashboardStats}
     */
    DashboardStats,

    /**
     * The DeleteCampaign200Response model constructor.
     * @property {module:sendx/model/DeleteCampaign200Response}
     */
    DeleteCampaign200Response,

    /**
     * The DeleteRequest model constructor.
     * @property {module:sendx/model/DeleteRequest}
     */
    DeleteRequest,

    /**
     * The DeleteResponse model constructor.
     * @property {module:sendx/model/DeleteResponse}
     */
    DeleteResponse,

    /**
     * The LastSentCampaignStat model constructor.
     * @property {module:sendx/model/LastSentCampaignStat}
     */
    LastSentCampaignStat,

    /**
     * The ListModel model constructor.
     * @property {module:sendx/model/ListModel}
     */
    ListModel,

    /**
     * The ListRequest model constructor.
     * @property {module:sendx/model/ListRequest}
     */
    ListRequest,

    /**
     * The ReportData model constructor.
     * @property {module:sendx/model/ReportData}
     */
    ReportData,

    /**
     * The Response model constructor.
     * @property {module:sendx/model/Response}
     */
    Response,

    /**
     * The Sender model constructor.
     * @property {module:sendx/model/Sender}
     */
    Sender,

    /**
     * The SenderRequest model constructor.
     * @property {module:sendx/model/SenderRequest}
     */
    SenderRequest,

    /**
     * The SenderResponse model constructor.
     * @property {module:sendx/model/SenderResponse}
     */
    SenderResponse,

    /**
     * The Tag model constructor.
     * @property {module:sendx/model/Tag}
     */
    Tag,

    /**
     * The TagRequest model constructor.
     * @property {module:sendx/model/TagRequest}
     */
    TagRequest,

    /**
    * The CampaignApi service constructor.
    * @property {module:sendx/api/CampaignApi}
    */
    CampaignApi,

    /**
    * The ContactApi service constructor.
    * @property {module:sendx/api/ContactApi}
    */
    ContactApi,

    /**
    * The ListApi service constructor.
    * @property {module:sendx/api/ListApi}
    */
    ListApi,

    /**
    * The ReportsApi service constructor.
    * @property {module:sendx/api/ReportsApi}
    */
    ReportsApi,

    /**
    * The SenderApi service constructor.
    * @property {module:sendx/api/SenderApi}
    */
    SenderApi,

    /**
    * The TagsApi service constructor.
    * @property {module:sendx/api/TagsApi}
    */
    TagsApi
};
