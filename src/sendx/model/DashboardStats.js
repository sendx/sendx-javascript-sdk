/**
 * SendX REST API
 * # Introduction The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LastSentCampaignStat from './LastSentCampaignStat';

/**
 * The DashboardStats model module.
 * @module sendx/model/DashboardStats
 * @version 1.0.0
 */
class DashboardStats {
    /**
     * Constructs a new <code>DashboardStats</code>.
     * @alias module:sendx/model/DashboardStats
     */
    constructor() { 
        
        DashboardStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DashboardStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sendx/model/DashboardStats} obj Optional instance to populate.
     * @return {module:sendx/model/DashboardStats} The populated <code>DashboardStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DashboardStats();

            if (data.hasOwnProperty('lastEmailCampaignStat')) {
                obj['lastEmailCampaignStat'] = LastSentCampaignStat.constructFromObject(data['lastEmailCampaignStat']);
            }
            if (data.hasOwnProperty('newsletterCount')) {
                obj['newsletterCount'] = ApiClient.convertToType(data['newsletterCount'], 'Number');
            }
            if (data.hasOwnProperty('automationCount')) {
                obj['automationCount'] = ApiClient.convertToType(data['automationCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DashboardStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DashboardStats</code>.
     */
    static validateJSON(data) {
        // validate the optional field `lastEmailCampaignStat`
        if (data['lastEmailCampaignStat']) { // data not null
          LastSentCampaignStat.validateJSON(data['lastEmailCampaignStat']);
        }

        return true;
    }

/**
     * @return {module:sendx/model/LastSentCampaignStat}
     */
    getLastEmailCampaignStat() {
        return this.lastEmailCampaignStat;
    }

    /**
     * @param {module:sendx/model/LastSentCampaignStat} lastEmailCampaignStat
     */
    setLastEmailCampaignStat(lastEmailCampaignStat) {
        this['lastEmailCampaignStat'] = lastEmailCampaignStat;
    }
/**
     * Returns Number of newsletters sent.
     * @return {Number}
     */
    getNewsletterCount() {
        return this.newsletterCount;
    }

    /**
     * Sets Number of newsletters sent.
     * @param {Number} newsletterCount Number of newsletters sent.
     */
    setNewsletterCount(newsletterCount) {
        this['newsletterCount'] = newsletterCount;
    }
/**
     * Returns Number of automations set up.
     * @return {Number}
     */
    getAutomationCount() {
        return this.automationCount;
    }

    /**
     * Sets Number of automations set up.
     * @param {Number} automationCount Number of automations set up.
     */
    setAutomationCount(automationCount) {
        this['automationCount'] = automationCount;
    }

}



/**
 * @member {module:sendx/model/LastSentCampaignStat} lastEmailCampaignStat
 */
DashboardStats.prototype['lastEmailCampaignStat'] = undefined;

/**
 * Number of newsletters sent.
 * @member {Number} newsletterCount
 */
DashboardStats.prototype['newsletterCount'] = undefined;

/**
 * Number of automations set up.
 * @member {Number} automationCount
 */
DashboardStats.prototype['automationCount'] = undefined;






export default DashboardStats;

