/**
 * SendX REST API
 * # Introduction The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeleteRequest model module.
 * @module sendx/model/DeleteRequest
 * @version 1.0.0
 */
class DeleteRequest {
    /**
     * Constructs a new <code>DeleteRequest</code>.
     * @alias module:sendx/model/DeleteRequest
     */
    constructor() { 
        
        DeleteRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeleteRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sendx/model/DeleteRequest} obj Optional instance to populate.
     * @return {module:sendx/model/DeleteRequest} The populated <code>DeleteRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeleteRequest();

            if (data.hasOwnProperty('deleteContacts')) {
                obj['deleteContacts'] = ApiClient.convertToType(data['deleteContacts'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeleteRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeleteRequest</code>.
     */
    static validateJSON(data) {

        return true;
    }

/**
     * Returns Indicates whether to delete associated contacts.
     * @return {Boolean}
     */
    getDeleteContacts() {
        return this.deleteContacts;
    }

    /**
     * Sets Indicates whether to delete associated contacts.
     * @param {Boolean} deleteContacts Indicates whether to delete associated contacts.
     */
    setDeleteContacts(deleteContacts) {
        this['deleteContacts'] = deleteContacts;
    }

}



/**
 * Indicates whether to delete associated contacts.
 * @member {Boolean} deleteContacts
 */
DeleteRequest.prototype['deleteContacts'] = undefined;






export default DeleteRequest;

