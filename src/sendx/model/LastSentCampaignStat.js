/**
 * SendX REST API
 * # Introduction SendX is an email marketing product. It helps you convert website visitors to customers, send them promotional emails, engage with them using drip sequences and craft custom journeys using powerful but simple automations. The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CampaignDashboardData from './CampaignDashboardData';

/**
 * The LastSentCampaignStat model module.
 * @module sendx/model/LastSentCampaignStat
 * @version 1.0.0
 */
class LastSentCampaignStat {
    /**
     * Constructs a new <code>LastSentCampaignStat</code>.
     * @alias module:sendx/model/LastSentCampaignStat
     */
    constructor() { 
        
        LastSentCampaignStat.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LastSentCampaignStat</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sendx/model/LastSentCampaignStat} obj Optional instance to populate.
     * @return {module:sendx/model/LastSentCampaignStat} The populated <code>LastSentCampaignStat</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LastSentCampaignStat();

            if (data.hasOwnProperty('campaign')) {
                obj['campaign'] = CampaignDashboardData.constructFromObject(data['campaign']);
            }
            if (data.hasOwnProperty('sent')) {
                obj['sent'] = ApiClient.convertToType(data['sent'], 'Number');
            }
            if (data.hasOwnProperty('delivered')) {
                obj['delivered'] = ApiClient.convertToType(data['delivered'], 'Number');
            }
            if (data.hasOwnProperty('subscribed')) {
                obj['subscribed'] = ApiClient.convertToType(data['subscribed'], 'Number');
            }
            if (data.hasOwnProperty('unsubscribed')) {
                obj['unsubscribed'] = ApiClient.convertToType(data['unsubscribed'], 'Number');
            }
            if (data.hasOwnProperty('open')) {
                obj['open'] = ApiClient.convertToType(data['open'], 'Number');
            }
            if (data.hasOwnProperty('linkClicked')) {
                obj['linkClicked'] = ApiClient.convertToType(data['linkClicked'], 'Number');
            }
            if (data.hasOwnProperty('replied')) {
                obj['replied'] = ApiClient.convertToType(data['replied'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LastSentCampaignStat</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LastSentCampaignStat</code>.
     */
    static validateJSON(data) {
        // validate the optional field `campaign`
        if (data['campaign']) { // data not null
          CampaignDashboardData.validateJSON(data['campaign']);
        }

        return true;
    }

/**
     * @return {module:sendx/model/CampaignDashboardData}
     */
    getCampaign() {
        return this.campaign;
    }

    /**
     * @param {module:sendx/model/CampaignDashboardData} campaign
     */
    setCampaign(campaign) {
        this['campaign'] = campaign;
    }
/**
     * Returns Number of emails sent.
     * @return {Number}
     */
    getSent() {
        return this.sent;
    }

    /**
     * Sets Number of emails sent.
     * @param {Number} sent Number of emails sent.
     */
    setSent(sent) {
        this['sent'] = sent;
    }
/**
     * Returns Number of emails delivered.
     * @return {Number}
     */
    getDelivered() {
        return this.delivered;
    }

    /**
     * Sets Number of emails delivered.
     * @param {Number} delivered Number of emails delivered.
     */
    setDelivered(delivered) {
        this['delivered'] = delivered;
    }
/**
     * Returns Number of new subscriptions.
     * @return {Number}
     */
    getSubscribed() {
        return this.subscribed;
    }

    /**
     * Sets Number of new subscriptions.
     * @param {Number} subscribed Number of new subscriptions.
     */
    setSubscribed(subscribed) {
        this['subscribed'] = subscribed;
    }
/**
     * Returns Number of unsubscribes.
     * @return {Number}
     */
    getUnsubscribed() {
        return this.unsubscribed;
    }

    /**
     * Sets Number of unsubscribes.
     * @param {Number} unsubscribed Number of unsubscribes.
     */
    setUnsubscribed(unsubscribed) {
        this['unsubscribed'] = unsubscribed;
    }
/**
     * Returns Number of emails opened.
     * @return {Number}
     */
    getOpen() {
        return this.open;
    }

    /**
     * Sets Number of emails opened.
     * @param {Number} open Number of emails opened.
     */
    setOpen(open) {
        this['open'] = open;
    }
/**
     * Returns Number of link clicks.
     * @return {Number}
     */
    getLinkClicked() {
        return this.linkClicked;
    }

    /**
     * Sets Number of link clicks.
     * @param {Number} linkClicked Number of link clicks.
     */
    setLinkClicked(linkClicked) {
        this['linkClicked'] = linkClicked;
    }
/**
     * Returns Number of replies received.
     * @return {Number}
     */
    getReplied() {
        return this.replied;
    }

    /**
     * Sets Number of replies received.
     * @param {Number} replied Number of replies received.
     */
    setReplied(replied) {
        this['replied'] = replied;
    }

}



/**
 * @member {module:sendx/model/CampaignDashboardData} campaign
 */
LastSentCampaignStat.prototype['campaign'] = undefined;

/**
 * Number of emails sent.
 * @member {Number} sent
 */
LastSentCampaignStat.prototype['sent'] = undefined;

/**
 * Number of emails delivered.
 * @member {Number} delivered
 */
LastSentCampaignStat.prototype['delivered'] = undefined;

/**
 * Number of new subscriptions.
 * @member {Number} subscribed
 */
LastSentCampaignStat.prototype['subscribed'] = undefined;

/**
 * Number of unsubscribes.
 * @member {Number} unsubscribed
 */
LastSentCampaignStat.prototype['unsubscribed'] = undefined;

/**
 * Number of emails opened.
 * @member {Number} open
 */
LastSentCampaignStat.prototype['open'] = undefined;

/**
 * Number of link clicks.
 * @member {Number} linkClicked
 */
LastSentCampaignStat.prototype['linkClicked'] = undefined;

/**
 * Number of replies received.
 * @member {Number} replied
 */
LastSentCampaignStat.prototype['replied'] = undefined;






export default LastSentCampaignStat;

