/**
 * SendX REST API
 * # Introduction SendX is an email marketing product. It helps you convert website visitors to customers, send them promotional emails, engage with them using drip sequences and craft custom journeys using powerful but simple automations. The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TrackRequest model module.
 * @module sendx/model/TrackRequest
 * @version 1.0.0
 */
class TrackRequest {
    /**
     * Constructs a new <code>TrackRequest</code>.
     * @alias module:sendx/model/TrackRequest
     */
    constructor() { 
        
        TrackRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TrackRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sendx/model/TrackRequest} obj Optional instance to populate.
     * @return {module:sendx/model/TrackRequest} The populated <code>TrackRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrackRequest();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('addTags')) {
                obj['addTags'] = ApiClient.convertToType(data['addTags'], ['String']);
            }
            if (data.hasOwnProperty('removeTags')) {
                obj['removeTags'] = ApiClient.convertToType(data['removeTags'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrackRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrackRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['addTags'])) {
            throw new Error("Expected the field `addTags` to be an array in the JSON data but got " + data['addTags']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['removeTags'])) {
            throw new Error("Expected the field `removeTags` to be an array in the JSON data but got " + data['removeTags']);
        }

        return true;
    }

/**
     * Returns Email address of the contact to track.
     * @return {String}
     */
    getEmail() {
        return this.email;
    }

    /**
     * Sets Email address of the contact to track.
     * @param {String} email Email address of the contact to track.
     */
    setEmail(email) {
        this['email'] = email;
    }
/**
     * @return {Array.<String>}
     */
    getAddTags() {
        return this.addTags;
    }

    /**
     * @param {Array.<String>} addTags
     */
    setAddTags(addTags) {
        this['addTags'] = addTags;
    }
/**
     * @return {Array.<String>}
     */
    getRemoveTags() {
        return this.removeTags;
    }

    /**
     * @param {Array.<String>} removeTags
     */
    setRemoveTags(removeTags) {
        this['removeTags'] = removeTags;
    }

}



/**
 * Email address of the contact to track.
 * @member {String} email
 */
TrackRequest.prototype['email'] = undefined;

/**
 * @member {Array.<String>} addTags
 */
TrackRequest.prototype['addTags'] = undefined;

/**
 * @member {Array.<String>} removeTags
 */
TrackRequest.prototype['removeTags'] = undefined;






export default TrackRequest;

