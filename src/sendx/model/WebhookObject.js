/**
 * SendX REST API
 * # SendX REST API Documentation  ## üöÄ Introduction  The SendX API is organized around REST principles. Our API has predictable resource-oriented URLs, accepts JSON-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.  **Key Features:** - üîí **Security**: Team-based authentication with optional member-level access - üéØ **Resource-Oriented**: RESTful design with clear resource boundaries - üìä **Rich Data Models**: Three-layer model system (Input/Output/Internal) - üîó **Relationships**: Automatic prefix handling for resource relationships - üìà **Scalable**: Built for high-volume email marketing operations  ## üèóÔ∏è Architecture Overview  SendX uses a three-layer model architecture:  1. **Input Models** (`RestE*`): For API requests 2. **Output Models** (`RestR*`): For API responses with prefixed IDs 3. **Internal Models**: Core business logic (not exposed in API)  ## üîê Security & Authentication  SendX uses API key authentication:  ### Team API Key ```http X-Team-ApiKey: YOUR_TEAM_API_KEY ``` - **Required for all requests** - Team-level access to resources - Available in SendX Settings ‚Üí Team API Key  ## üÜî Encrypted ID System  SendX uses encrypted IDs for security and better developer experience:  - **Internal IDs**: Sequential integers (not exposed) - **Encrypted IDs**: 22-character alphanumeric strings - **Prefixed IDs**: Resource-type prefixes in API responses (`contact_<22-char-id>`)  ### ID Format  **All resource IDs follow this pattern:** ``` <resource_prefix>_<22_character_alphanumeric_string> ```  **Example:** ```json {   \"id\": \"contact_BnKjkbBBS500CoBCP0oChQ\",   \"lists\": [\"list_OcuxJHdiAvujmwQVJfd3ss\", \"list_0tOFLp5RgV7s3LNiHrjGYs\"],   \"tags\": [\"tag_UhsDkjL772Qbj5lWtT62VK\", \"tag_fL7t9lsnZ9swvx2HrtQ9wM\"] } ```  ## üìö Resource Prefixes  | Resource | Prefix | Example | |----------|--------|---------| | Contact | `contact_` | `contact_BnKjkbBBS500CoBCP0oChQ` | | Campaign | `campaign_` | `campaign_LUE9BTxmksSmqHWbh96zsn` | | List | `list_` | `list_OcuxJHdiAvujmwQVJfd3ss` | | Tag | `tag_` | `tag_UhsDkjL772Qbj5lWtT62VK` | | Sender | `sender_` | `sender_4vK3WFhMgvOwUNyaL4QxCD` | | Template | `template_` | `template_f3lJvTEhSjKGVb5Lwc5SWS` | | Custom Field | `field_` | `field_MnuqBAG2NPLm7PZMWbjQxt` | | Webhook | `webhook_` | `webhook_9l154iiXlZoPo7vngmamee` | | Post | `post_` | `post_XyZ123aBc456DeF789GhI` | | Post Category | `post_category_` | `post_category_YzS1wOU20yw87UUHKxMzwn` | | Post Tag | `post_tag_` | `post_tag_123XyZ456AbC` | | Member | `member_` | `member_JkL012MnO345PqR678` |  ## üéØ Best Practices  ### Error Handling - **Always check status codes**: 2xx = success, 4xx = client error, 5xx = server error - **Read error messages**: Descriptive messages help debug issues - **Handle rate limits**: Respect API rate limits for optimal performance  ### Data Validation - **Email format**: Must be valid email addresses - **Required fields**: Check documentation for mandatory fields - **Field lengths**: Respect maximum length constraints  ### Performance - **Pagination**: Use offset/limit for large datasets - **Batch operations**: Process multiple items when supported - **Caching**: Cache responses when appropriate  ## üõ†Ô∏è SDKs & Integration  Official SDKs available for: - [Golang](https://github.com/sendx/sendx-go-sdk) - [Python](https://github.com/sendx/sendx-python-sdk) - [Ruby](https://github.com/sendx/sendx-ruby-sdk) - [Java](https://github.com/sendx/sendx-java-sdk) - [PHP](https://github.com/sendx/sendx-php-sdk) - [JavaScript](https://github.com/sendx/sendx-javascript-sdk)  ## üìû Support  Need help? Contact us: - üí¨ **Website Chat**: Available on sendx.io - üìß **Email**: hello@sendx.io - üìö **Documentation**: Full guides at help.sendx.io  ---  **API Endpoint:** `https://api.sendx.io/api/v1/rest`  [<img src=\"https://run.pstmn.io/button.svg\" alt=\"Run In Postman\" style=\"width: 128px; height: 32px;\">](https://god.gw.postman.com/run-collection/33476323-44b198b0-5219-4619-a01f-cfc24d573885?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D33476323-44b198b0-5219-4619-a01f-cfc24d573885%26entityType%3Dcollection%26workspaceId%3D6b1e4f65-96a9-4136-9512-6266c852517e) 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: hello@sendx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The WebhookObject model module.
 * @module sendx/model/WebhookObject
 * @version 1.0.0
 */
class WebhookObject {
    /**
     * Constructs a new <code>WebhookObject</code>.
     * @alias module:sendx/model/WebhookObject
     */
    constructor() { 
        
        WebhookObject.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebhookObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:sendx/model/WebhookObject} obj Optional instance to populate.
     * @return {module:sendx/model/WebhookObject} The populated <code>WebhookObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebhookObject();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'Number');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'Number');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], 'String');
            }
            if (data.hasOwnProperty('provider_message_id')) {
                obj['provider_message_id'] = ApiClient.convertToType(data['provider_message_id'], 'String');
            }
            if (data.hasOwnProperty('campaign_id')) {
                obj['campaign_id'] = ApiClient.convertToType(data['campaign_id'], 'String');
            }
            if (data.hasOwnProperty('drip_step_id')) {
                obj['drip_step_id'] = ApiClient.convertToType(data['drip_step_id'], 'String');
            }
            if (data.hasOwnProperty('rss_exec_id')) {
                obj['rss_exec_id'] = ApiClient.convertToType(data['rss_exec_id'], 'String');
            }
            if (data.hasOwnProperty('tag_id')) {
                obj['tag_id'] = ApiClient.convertToType(data['tag_id'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('list_id')) {
                obj['list_id'] = ApiClient.convertToType(data['list_id'], 'String');
            }
            if (data.hasOwnProperty('contact_id')) {
                obj['contact_id'] = ApiClient.convertToType(data['contact_id'], 'String');
            }
            if (data.hasOwnProperty('custom_field_id')) {
                obj['custom_field_id'] = ApiClient.convertToType(data['custom_field_id'], 'String');
            }
            if (data.hasOwnProperty('template_id')) {
                obj['template_id'] = ApiClient.convertToType(data['template_id'], 'String');
            }
            if (data.hasOwnProperty('popup_id')) {
                obj['popup_id'] = ApiClient.convertToType(data['popup_id'], 'String');
            }
            if (data.hasOwnProperty('landing_page_id')) {
                obj['landing_page_id'] = ApiClient.convertToType(data['landing_page_id'], 'String');
            }
            if (data.hasOwnProperty('form_id')) {
                obj['form_id'] = ApiClient.convertToType(data['form_id'], 'String');
            }
            if (data.hasOwnProperty('segment_id')) {
                obj['segment_id'] = ApiClient.convertToType(data['segment_id'], 'String');
            }
            if (data.hasOwnProperty('automation_id')) {
                obj['automation_id'] = ApiClient.convertToType(data['automation_id'], 'String');
            }
            if (data.hasOwnProperty('drip_id')) {
                obj['drip_id'] = ApiClient.convertToType(data['drip_id'], 'String');
            }
            if (data.hasOwnProperty('rss_id')) {
                obj['rss_id'] = ApiClient.convertToType(data['rss_id'], 'String');
            }
            if (data.hasOwnProperty('ab_test_id')) {
                obj['ab_test_id'] = ApiClient.convertToType(data['ab_test_id'], 'String');
            }
            if (data.hasOwnProperty('workflow_id')) {
                obj['workflow_id'] = ApiClient.convertToType(data['workflow_id'], 'String');
            }
            if (data.hasOwnProperty('workflow_node_id')) {
                obj['workflow_node_id'] = ApiClient.convertToType(data['workflow_node_id'], 'String');
            }
            if (data.hasOwnProperty('workflow_email_id')) {
                obj['workflow_email_id'] = ApiClient.convertToType(data['workflow_email_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebhookObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebhookObject</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['data'] && !(typeof data['data'] === 'string' || data['data'] instanceof String)) {
            throw new Error("Expected the field `data` to be a primitive type in the JSON string but got " + data['data']);
        }
        // ensure the json data is a string
        if (data['provider_message_id'] && !(typeof data['provider_message_id'] === 'string' || data['provider_message_id'] instanceof String)) {
            throw new Error("Expected the field `provider_message_id` to be a primitive type in the JSON string but got " + data['provider_message_id']);
        }
        // ensure the json data is a string
        if (data['campaign_id'] && !(typeof data['campaign_id'] === 'string' || data['campaign_id'] instanceof String)) {
            throw new Error("Expected the field `campaign_id` to be a primitive type in the JSON string but got " + data['campaign_id']);
        }
        // ensure the json data is a string
        if (data['drip_step_id'] && !(typeof data['drip_step_id'] === 'string' || data['drip_step_id'] instanceof String)) {
            throw new Error("Expected the field `drip_step_id` to be a primitive type in the JSON string but got " + data['drip_step_id']);
        }
        // ensure the json data is a string
        if (data['rss_exec_id'] && !(typeof data['rss_exec_id'] === 'string' || data['rss_exec_id'] instanceof String)) {
            throw new Error("Expected the field `rss_exec_id` to be a primitive type in the JSON string but got " + data['rss_exec_id']);
        }
        // ensure the json data is a string
        if (data['tag_id'] && !(typeof data['tag_id'] === 'string' || data['tag_id'] instanceof String)) {
            throw new Error("Expected the field `tag_id` to be a primitive type in the JSON string but got " + data['tag_id']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['list_id'] && !(typeof data['list_id'] === 'string' || data['list_id'] instanceof String)) {
            throw new Error("Expected the field `list_id` to be a primitive type in the JSON string but got " + data['list_id']);
        }
        // ensure the json data is a string
        if (data['contact_id'] && !(typeof data['contact_id'] === 'string' || data['contact_id'] instanceof String)) {
            throw new Error("Expected the field `contact_id` to be a primitive type in the JSON string but got " + data['contact_id']);
        }
        // ensure the json data is a string
        if (data['custom_field_id'] && !(typeof data['custom_field_id'] === 'string' || data['custom_field_id'] instanceof String)) {
            throw new Error("Expected the field `custom_field_id` to be a primitive type in the JSON string but got " + data['custom_field_id']);
        }
        // ensure the json data is a string
        if (data['template_id'] && !(typeof data['template_id'] === 'string' || data['template_id'] instanceof String)) {
            throw new Error("Expected the field `template_id` to be a primitive type in the JSON string but got " + data['template_id']);
        }
        // ensure the json data is a string
        if (data['popup_id'] && !(typeof data['popup_id'] === 'string' || data['popup_id'] instanceof String)) {
            throw new Error("Expected the field `popup_id` to be a primitive type in the JSON string but got " + data['popup_id']);
        }
        // ensure the json data is a string
        if (data['landing_page_id'] && !(typeof data['landing_page_id'] === 'string' || data['landing_page_id'] instanceof String)) {
            throw new Error("Expected the field `landing_page_id` to be a primitive type in the JSON string but got " + data['landing_page_id']);
        }
        // ensure the json data is a string
        if (data['form_id'] && !(typeof data['form_id'] === 'string' || data['form_id'] instanceof String)) {
            throw new Error("Expected the field `form_id` to be a primitive type in the JSON string but got " + data['form_id']);
        }
        // ensure the json data is a string
        if (data['segment_id'] && !(typeof data['segment_id'] === 'string' || data['segment_id'] instanceof String)) {
            throw new Error("Expected the field `segment_id` to be a primitive type in the JSON string but got " + data['segment_id']);
        }
        // ensure the json data is a string
        if (data['automation_id'] && !(typeof data['automation_id'] === 'string' || data['automation_id'] instanceof String)) {
            throw new Error("Expected the field `automation_id` to be a primitive type in the JSON string but got " + data['automation_id']);
        }
        // ensure the json data is a string
        if (data['drip_id'] && !(typeof data['drip_id'] === 'string' || data['drip_id'] instanceof String)) {
            throw new Error("Expected the field `drip_id` to be a primitive type in the JSON string but got " + data['drip_id']);
        }
        // ensure the json data is a string
        if (data['rss_id'] && !(typeof data['rss_id'] === 'string' || data['rss_id'] instanceof String)) {
            throw new Error("Expected the field `rss_id` to be a primitive type in the JSON string but got " + data['rss_id']);
        }
        // ensure the json data is a string
        if (data['ab_test_id'] && !(typeof data['ab_test_id'] === 'string' || data['ab_test_id'] instanceof String)) {
            throw new Error("Expected the field `ab_test_id` to be a primitive type in the JSON string but got " + data['ab_test_id']);
        }
        // ensure the json data is a string
        if (data['workflow_id'] && !(typeof data['workflow_id'] === 'string' || data['workflow_id'] instanceof String)) {
            throw new Error("Expected the field `workflow_id` to be a primitive type in the JSON string but got " + data['workflow_id']);
        }
        // ensure the json data is a string
        if (data['workflow_node_id'] && !(typeof data['workflow_node_id'] === 'string' || data['workflow_node_id'] instanceof String)) {
            throw new Error("Expected the field `workflow_node_id` to be a primitive type in the JSON string but got " + data['workflow_node_id']);
        }
        // ensure the json data is a string
        if (data['workflow_email_id'] && !(typeof data['workflow_email_id'] === 'string' || data['workflow_email_id'] instanceof String)) {
            throw new Error("Expected the field `workflow_email_id` to be a primitive type in the JSON string but got " + data['workflow_email_id']);
        }

        return true;
    }

/**
     * Returns The type of the event.
     * @return {Number}
     */
    getType() {
        return this.type;
    }

    /**
     * Sets The type of the event.
     * @param {Number} type The type of the event.
     */
    setType(type) {
        this['type'] = type;
    }
/**
     * Returns The timestamp of the event in milliseconds since the epoch.
     * @return {Number}
     */
    getTime() {
        return this.time;
    }

    /**
     * Sets The timestamp of the event in milliseconds since the epoch.
     * @param {Number} time The timestamp of the event in milliseconds since the epoch.
     */
    setTime(time) {
        this['time'] = time;
    }
/**
     * Returns Arbitrary data associated with the event.
     * @return {String}
     */
    getData() {
        return this.data;
    }

    /**
     * Sets Arbitrary data associated with the event.
     * @param {String} data Arbitrary data associated with the event.
     */
    setData(data) {
        this['data'] = data;
    }
/**
     * Returns Optional provider message ID.
     * @return {String}
     */
    getProviderMessageId() {
        return this.provider_message_id;
    }

    /**
     * Sets Optional provider message ID.
     * @param {String} providerMessageId Optional provider message ID.
     */
    setProviderMessageId(providerMessageId) {
        this['provider_message_id'] = providerMessageId;
    }
/**
     * Returns Optional campaign ID.
     * @return {String}
     */
    getCampaignId() {
        return this.campaign_id;
    }

    /**
     * Sets Optional campaign ID.
     * @param {String} campaignId Optional campaign ID.
     */
    setCampaignId(campaignId) {
        this['campaign_id'] = campaignId;
    }
/**
     * Returns Optional drip step ID.
     * @return {String}
     */
    getDripStepId() {
        return this.drip_step_id;
    }

    /**
     * Sets Optional drip step ID.
     * @param {String} dripStepId Optional drip step ID.
     */
    setDripStepId(dripStepId) {
        this['drip_step_id'] = dripStepId;
    }
/**
     * Returns Optional RSS execution ID.
     * @return {String}
     */
    getRssExecId() {
        return this.rss_exec_id;
    }

    /**
     * Sets Optional RSS execution ID.
     * @param {String} rssExecId Optional RSS execution ID.
     */
    setRssExecId(rssExecId) {
        this['rss_exec_id'] = rssExecId;
    }
/**
     * Returns Optional tag ID.
     * @return {String}
     */
    getTagId() {
        return this.tag_id;
    }

    /**
     * Sets Optional tag ID.
     * @param {String} tagId Optional tag ID.
     */
    setTagId(tagId) {
        this['tag_id'] = tagId;
    }
/**
     * Returns Optional link associated with the event.
     * @return {String}
     */
    getLink() {
        return this.link;
    }

    /**
     * Sets Optional link associated with the event.
     * @param {String} link Optional link associated with the event.
     */
    setLink(link) {
        this['link'] = link;
    }
/**
     * Returns Optional list ID.
     * @return {String}
     */
    getListId() {
        return this.list_id;
    }

    /**
     * Sets Optional list ID.
     * @param {String} listId Optional list ID.
     */
    setListId(listId) {
        this['list_id'] = listId;
    }
/**
     * Returns Optional contact ID.
     * @return {String}
     */
    getContactId() {
        return this.contact_id;
    }

    /**
     * Sets Optional contact ID.
     * @param {String} contactId Optional contact ID.
     */
    setContactId(contactId) {
        this['contact_id'] = contactId;
    }
/**
     * Returns Optional custom field ID.
     * @return {String}
     */
    getCustomFieldId() {
        return this.custom_field_id;
    }

    /**
     * Sets Optional custom field ID.
     * @param {String} customFieldId Optional custom field ID.
     */
    setCustomFieldId(customFieldId) {
        this['custom_field_id'] = customFieldId;
    }
/**
     * Returns Optional template ID.
     * @return {String}
     */
    getTemplateId() {
        return this.template_id;
    }

    /**
     * Sets Optional template ID.
     * @param {String} templateId Optional template ID.
     */
    setTemplateId(templateId) {
        this['template_id'] = templateId;
    }
/**
     * Returns Optional popup ID.
     * @return {String}
     */
    getPopupId() {
        return this.popup_id;
    }

    /**
     * Sets Optional popup ID.
     * @param {String} popupId Optional popup ID.
     */
    setPopupId(popupId) {
        this['popup_id'] = popupId;
    }
/**
     * Returns Optional landing page ID.
     * @return {String}
     */
    getLandingPageId() {
        return this.landing_page_id;
    }

    /**
     * Sets Optional landing page ID.
     * @param {String} landingPageId Optional landing page ID.
     */
    setLandingPageId(landingPageId) {
        this['landing_page_id'] = landingPageId;
    }
/**
     * Returns Optional form ID.
     * @return {String}
     */
    getFormId() {
        return this.form_id;
    }

    /**
     * Sets Optional form ID.
     * @param {String} formId Optional form ID.
     */
    setFormId(formId) {
        this['form_id'] = formId;
    }
/**
     * Returns Optional segment ID.
     * @return {String}
     */
    getSegmentId() {
        return this.segment_id;
    }

    /**
     * Sets Optional segment ID.
     * @param {String} segmentId Optional segment ID.
     */
    setSegmentId(segmentId) {
        this['segment_id'] = segmentId;
    }
/**
     * Returns Optional automation ID.
     * @return {String}
     */
    getAutomationId() {
        return this.automation_id;
    }

    /**
     * Sets Optional automation ID.
     * @param {String} automationId Optional automation ID.
     */
    setAutomationId(automationId) {
        this['automation_id'] = automationId;
    }
/**
     * Returns Optional drip ID.
     * @return {String}
     */
    getDripId() {
        return this.drip_id;
    }

    /**
     * Sets Optional drip ID.
     * @param {String} dripId Optional drip ID.
     */
    setDripId(dripId) {
        this['drip_id'] = dripId;
    }
/**
     * Returns Optional RSS ID.
     * @return {String}
     */
    getRssId() {
        return this.rss_id;
    }

    /**
     * Sets Optional RSS ID.
     * @param {String} rssId Optional RSS ID.
     */
    setRssId(rssId) {
        this['rss_id'] = rssId;
    }
/**
     * Returns Optional A/B test ID.
     * @return {String}
     */
    getAbTestId() {
        return this.ab_test_id;
    }

    /**
     * Sets Optional A/B test ID.
     * @param {String} abTestId Optional A/B test ID.
     */
    setAbTestId(abTestId) {
        this['ab_test_id'] = abTestId;
    }
/**
     * Returns Optional workflow ID.
     * @return {String}
     */
    getWorkflowId() {
        return this.workflow_id;
    }

    /**
     * Sets Optional workflow ID.
     * @param {String} workflowId Optional workflow ID.
     */
    setWorkflowId(workflowId) {
        this['workflow_id'] = workflowId;
    }
/**
     * Returns Optional workflow node ID.
     * @return {String}
     */
    getWorkflowNodeId() {
        return this.workflow_node_id;
    }

    /**
     * Sets Optional workflow node ID.
     * @param {String} workflowNodeId Optional workflow node ID.
     */
    setWorkflowNodeId(workflowNodeId) {
        this['workflow_node_id'] = workflowNodeId;
    }
/**
     * Returns Optional workflow email ID.
     * @return {String}
     */
    getWorkflowEmailId() {
        return this.workflow_email_id;
    }

    /**
     * Sets Optional workflow email ID.
     * @param {String} workflowEmailId Optional workflow email ID.
     */
    setWorkflowEmailId(workflowEmailId) {
        this['workflow_email_id'] = workflowEmailId;
    }

}



/**
 * The type of the event.
 * @member {Number} type
 */
WebhookObject.prototype['type'] = undefined;

/**
 * The timestamp of the event in milliseconds since the epoch.
 * @member {Number} time
 */
WebhookObject.prototype['time'] = undefined;

/**
 * Arbitrary data associated with the event.
 * @member {String} data
 */
WebhookObject.prototype['data'] = undefined;

/**
 * Optional provider message ID.
 * @member {String} provider_message_id
 */
WebhookObject.prototype['provider_message_id'] = undefined;

/**
 * Optional campaign ID.
 * @member {String} campaign_id
 */
WebhookObject.prototype['campaign_id'] = undefined;

/**
 * Optional drip step ID.
 * @member {String} drip_step_id
 */
WebhookObject.prototype['drip_step_id'] = undefined;

/**
 * Optional RSS execution ID.
 * @member {String} rss_exec_id
 */
WebhookObject.prototype['rss_exec_id'] = undefined;

/**
 * Optional tag ID.
 * @member {String} tag_id
 */
WebhookObject.prototype['tag_id'] = undefined;

/**
 * Optional link associated with the event.
 * @member {String} link
 */
WebhookObject.prototype['link'] = undefined;

/**
 * Optional list ID.
 * @member {String} list_id
 */
WebhookObject.prototype['list_id'] = undefined;

/**
 * Optional contact ID.
 * @member {String} contact_id
 */
WebhookObject.prototype['contact_id'] = undefined;

/**
 * Optional custom field ID.
 * @member {String} custom_field_id
 */
WebhookObject.prototype['custom_field_id'] = undefined;

/**
 * Optional template ID.
 * @member {String} template_id
 */
WebhookObject.prototype['template_id'] = undefined;

/**
 * Optional popup ID.
 * @member {String} popup_id
 */
WebhookObject.prototype['popup_id'] = undefined;

/**
 * Optional landing page ID.
 * @member {String} landing_page_id
 */
WebhookObject.prototype['landing_page_id'] = undefined;

/**
 * Optional form ID.
 * @member {String} form_id
 */
WebhookObject.prototype['form_id'] = undefined;

/**
 * Optional segment ID.
 * @member {String} segment_id
 */
WebhookObject.prototype['segment_id'] = undefined;

/**
 * Optional automation ID.
 * @member {String} automation_id
 */
WebhookObject.prototype['automation_id'] = undefined;

/**
 * Optional drip ID.
 * @member {String} drip_id
 */
WebhookObject.prototype['drip_id'] = undefined;

/**
 * Optional RSS ID.
 * @member {String} rss_id
 */
WebhookObject.prototype['rss_id'] = undefined;

/**
 * Optional A/B test ID.
 * @member {String} ab_test_id
 */
WebhookObject.prototype['ab_test_id'] = undefined;

/**
 * Optional workflow ID.
 * @member {String} workflow_id
 */
WebhookObject.prototype['workflow_id'] = undefined;

/**
 * Optional workflow node ID.
 * @member {String} workflow_node_id
 */
WebhookObject.prototype['workflow_node_id'] = undefined;

/**
 * Optional workflow email ID.
 * @member {String} workflow_email_id
 */
WebhookObject.prototype['workflow_email_id'] = undefined;






export default WebhookObject;

