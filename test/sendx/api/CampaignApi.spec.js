/**
 * SendX REST API
 * # Introduction The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

const expect = require('expect.js');
const sendx = require('../../../src/index');

describe('CampaignApi', function() {
  let instance;

  beforeEach(function() {
    instance = new sendx.CampaignApi();
  });

  describe('createCampaign', function() {
    it('should call createCampaign successfully', function(done) {
      //uncomment below and update the code to test createCampaign
      //instance.createCampaign(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('deleteCampaign', function() {
    it('should call deleteCampaign successfully', function(done) {
      //uncomment below and update the code to test deleteCampaign
      //instance.deleteCampaign(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('getAllCampaigns', function() {
    it('should call getAllCampaigns successfully', function(done) {
      //uncomment below and update the code to test getAllCampaigns
      //instance.getAllCampaigns(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
  describe('getCampaign', function() {
    it('should call getCampaign successfully', function(done) {
      //uncomment below and update the code to test getCampaign
      //instance.getCampaign(function(error) {
      //  if (error) throw error;
      //expect().to.be();
      //});
      done();
    });
  });
});